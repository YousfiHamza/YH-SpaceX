{"version":3,"sources":["spacex-logo.png","components/launchItem.jsx","components/missionKey.jsx","components/launches.jsx","components/launch.jsx","App.js","reportWebVitals.js","index.js"],"names":["LaunchItem","launch","flight_number","mission_name","launch_success","launch_date_local","className","classNames","format","to","MissionKey","LAUNCHES_QUERY","gql","Launches","query","loading","error","data","console","log","message","launches","map","LAUNCH_QUERY","Launch","this","props","match","params","parseInt","variables","launch_year","rocket","rocket_id","rocket_name","rocket_type","Component","client","ApolloClient","uri","App","src","logo","alt","style","width","display","margin","exact","path","component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.56305590.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/spacex-logo.02af4215.png\";","import React from \"react\";\r\nimport classNames from \"classnames\";\r\nimport Moment from \"react-moment\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nexport default function LaunchItem({\r\n  launch: { flight_number, mission_name, launch_success, launch_date_local },\r\n}) {\r\n  return (\r\n    <div className=\"card card-body mb-3\">\r\n      <div className=\"row\">\r\n        <div className=\"col-md-9\">\r\n          <h4>\r\n            Mission :{\" \"}\r\n            <span\r\n              className={classNames({\r\n                \"text-success\": launch_success,\r\n                \"text-danger\": !launch_success,\r\n              })}\r\n            >\r\n              {mission_name}\r\n            </span>\r\n          </h4>\r\n          <p>\r\n            Date: <Moment format=\"YYYY-MM-DD HH:mm\">{launch_date_local}</Moment>\r\n          </p>\r\n        </div>\r\n        <div className=\"col-md-3\">\r\n          <Link to={`/launch/${flight_number}`} className=\"btn btn-secondary\">\r\n            Launch Details\r\n          </Link>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import React from \"react\";\r\n\r\nexport default function MissionKey() {\r\n  return (\r\n    <div className=\"my-3\">\r\n      <p>\r\n        <span className=\"px-3 mr-2 bg-success\" /> = Success\r\n      </p>\r\n      <p>\r\n        <span className=\"px-3 mr-2 bg-danger\" /> = Fail\r\n      </p>\r\n    </div>\r\n  );\r\n}\r\n","import React, { Fragment } from \"react\";\r\nimport gql from \"graphql-tag\";\r\nimport { Query } from \"react-apollo\";\r\n\r\nimport LaunchItem from \"./launchItem\";\r\nimport MissionKey from \"./missionKey\";\r\n\r\nconst LAUNCHES_QUERY = gql`\r\n  query LaunchesQuery {\r\n    launches {\r\n      flight_number\r\n      mission_name\r\n      launch_date_local\r\n      launch_success\r\n    }\r\n  }\r\n`;\r\n\r\nexport default function Launches() {\r\n  return (\r\n    <>\r\n      <h1 className=\"display-4 my-3\">Launches</h1>\r\n      <MissionKey />\r\n      <Query query={LAUNCHES_QUERY}>\r\n        {({ loading, error, data }) => {\r\n          if (loading) return <h1>Loading ... </h1>;\r\n          if (error) console.log(error.message);\r\n\r\n          return (\r\n            <Fragment>\r\n              {data.launches.map((launch) => (\r\n                <>\r\n                  <LaunchItem key={launch.flight_number} launch={launch} />\r\n                </>\r\n              ))}\r\n            </Fragment>\r\n          );\r\n        }}\r\n      </Query>\r\n    </>\r\n  );\r\n}\r\n","import React, { Component, Fragment } from \"react\";\r\nimport gql from \"graphql-tag\";\r\nimport { Query } from \"react-apollo\";\r\nimport { Link } from \"react-router-dom\";\r\nimport classNames from \"classnames\";\r\n\r\nconst LAUNCH_QUERY = gql`\r\n  query LaunchQuery($flight_number: Int!) {\r\n    launch(flight_number: $flight_number) {\r\n      flight_number\r\n      mission_name\r\n      launch_year\r\n      launch_success\r\n      launch_date_local\r\n      rocket {\r\n        rocket_id\r\n        rocket_name\r\n        rocket_type\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nexport class Launch extends Component {\r\n  render() {\r\n    let { flight_number } = this.props.match.params;\r\n    flight_number = parseInt(flight_number);\r\n    return (\r\n      <Fragment>\r\n        <Query query={LAUNCH_QUERY} variables={{ flight_number }}>\r\n          {({ loading, error, data }) => {\r\n            if (loading) return <h4>Loading...</h4>;\r\n            if (error) console.log(error);\r\n\r\n            const {\r\n              mission_name,\r\n              flight_number,\r\n              launch_year,\r\n              launch_success,\r\n              rocket: { rocket_id, rocket_name, rocket_type },\r\n            } = data.launch;\r\n\r\n            return (\r\n              <div>\r\n                <h1 className=\"display-4 my-3\">\r\n                  <span className=\"text-dark\">Mission:</span> {mission_name}\r\n                </h1>\r\n                <h4 className=\"mb-3\">Launch Details</h4>\r\n                <ul className=\"list-group\">\r\n                  <li className=\"list-group-item\">\r\n                    Flight Number: {flight_number}\r\n                  </li>\r\n                  <li className=\"list-group-item\">\r\n                    Launch Year: {launch_year}\r\n                  </li>\r\n                  <li className=\"list-group-item\">\r\n                    Launch Successful:{\" \"}\r\n                    <span\r\n                      className={classNames({\r\n                        \"text-success\": launch_success,\r\n                        \"text-danger\": !launch_success,\r\n                      })}\r\n                    >\r\n                      {launch_success ? \"Yes\" : \"No\"}\r\n                    </span>\r\n                  </li>\r\n                </ul>\r\n\r\n                <h4 className=\"my-3\">Rocket Details</h4>\r\n                <ul className=\"list-group\">\r\n                  <li className=\"list-group-item\">Rocket ID: {rocket_id}</li>\r\n                  <li className=\"list-group-item\">\r\n                    Rocket Name: {rocket_name}\r\n                  </li>\r\n                  <li className=\"list-group-item\">\r\n                    Rocket Type: {rocket_type}\r\n                  </li>\r\n                </ul>\r\n                <hr />\r\n                <Link to=\"/\" className=\"btn btn-secondary\">\r\n                  Back\r\n                </Link>\r\n              </div>\r\n            );\r\n          }}\r\n        </Query>\r\n      </Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Launch;\r\n","import \"./App.css\";\nimport logo from \"./spacex-logo.png\";\nimport { ApolloProvider } from \"react-apollo\";\nimport ApolloClient from \"apollo-boost\";\nimport { BrowserRouter as Router, Route } from \"react-router-dom\";\n\nimport Launches from \"./components/launches.jsx\";\nimport Launch from \"./components/launch.jsx\";\n\nconst client = new ApolloClient({\n  uri: \"/graphql\", // ON Prod cauz the proxy was added in the client package.json\n  // uri: \"http://localhost:4000/graphql\", ONLY ON LOCAL\n});\n\nfunction App() {\n  return (\n    <ApolloProvider client={client}>\n      <Router>\n        <div className=\"container\">\n          <img\n            src={logo}\n            alt=\"Space X\"\n            style={{ width: 300, display: \"block\", margin: \"auto\" }}\n          />\n          <Route exact path=\"/\" component={Launches} />\n          <Route exact path=\"/launch/:flight_number\" component={Launch} />\n        </div>\n      </Router>\n    </ApolloProvider>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}